{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_azureblob_1_name": {
            "defaultValue": "azureblob-1",
            "type": "String"
        },
        "connections_azureblob_2_name": {
            "defaultValue": "azureblob-2",
            "type": "String"
        },
        "connections_azureblob_3_name": {
            "defaultValue": "azureblob-3",
            "type": "String"
        },
        "connections_azureblob_4_name": {
            "defaultValue": "azureblob-4",
            "type": "String"
        },
        "connections_azureblob_5_name": {
            "defaultValue": "azureblob-5",
            "type": "String"
        },
        "actionGroups_Email_Alicia_name": {
            "defaultValue": "Email_Alicia",
            "type": "String"
        },
        "connections_PA_DevTest_VPN_name": {
            "defaultValue": "PA-DevTest-VPN",
            "type": "String"
        },
        "networkInterfaces_test_vm2_name": {
            "defaultValue": "test-vm2",
            "type": "String"
        },
        "storageAccounts_devdatabphc_name": {
            "defaultValue": "devdatabphc",
            "type": "String"
        },
        "routeTables_DevTest_RouteTable_name": {
            "defaultValue": "DevTest-RouteTable",
            "type": "String"
        },
        "virtualNetworks_DevTest_Network_name": {
            "defaultValue": "DevTest-Network",
            "type": "String"
        },
        "serverfarms_ASP_DevTestNetwork_b27f_name": {
            "defaultValue": "ASP-DevTestNetwork-b27f",
            "type": "String"
        },
        "storageAccounts_devtestnetwork93cd_name": {
            "defaultValue": "devtestnetwork93cd",
            "type": "String"
        },
        "sites_SharePointDataExtractionFunction_name": {
            "defaultValue": "SharePointDataExtractionFunction",
            "type": "String"
        },
        "publicIPAddresses_DevTest_GatewayIP_name": {
            "defaultValue": "DevTest-GatewayIP",
            "type": "String"
        },
        "metricAlerts_EmailOnADFActionFailure_name": {
            "defaultValue": "EmailOnADFActionFailure",
            "type": "String"
        },
        "metricAlerts_EmailOnADFPipelineFailure_name": {
            "defaultValue": "EmailOnADFPipelineFailure",
            "type": "String"
        },
        "localNetworkGateways_DevTest_LocalNetworkGateway_name": {
            "defaultValue": "DevTest-LocalNetworkGateway",
            "type": "String"
        },
        "privateDnsZones_privatelink_dfs_core_windows_net_name": {
            "defaultValue": "privatelink.dfs.core.windows.net",
            "type": "String"
        },
        "privateDnsZones_privatelink_blob_core_windows_net_name": {
            "defaultValue": "privatelink.blob.core.windows.net",
            "type": "String"
        },
        "privateDnsZones_privatelink_datafactory_azure_net_name": {
            "defaultValue": "privatelink.datafactory.azure.net",
            "type": "String"
        },
        "privateEndpoints_dmiprojectsstorage_private_endpoint_name": {
            "defaultValue": "dmiprojectsstorage-private-endpoint",
            "type": "String"
        },
        "virtualNetworkGateways_DevTest_VirtualNetworkGateway1_name": {
            "defaultValue": "DevTest-VirtualNetworkGateway1",
            "type": "String"
        },
        "privateEndpoints_dmi_projects_factory_private_endpoint_name": {
            "defaultValue": "dmi-projects-factory-private-endpoint",
            "type": "String"
        },
        "factories_data_modernization_externalid": {
            "defaultValue": "/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/resourceGroups/DevTest-Network/providers/Microsoft.DataFactory/factories/data-modernization",
            "type": "String"
        },
        "factories_dmi_projects_factory_externalid": {
            "defaultValue": "/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/resourceGroups/DevTest-Network/providers/Microsoft.DataFactory/factories/dmi-projects-factory",
            "type": "String"
        },
        "storageAccounts_dmiprojectsstorage_externalid": {
            "defaultValue": "/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/resourceGroups/DevTest-Network/providers/Microsoft.Storage/storageAccounts/dmiprojectsstorage",
            "type": "String"
        },
        "virtualNetworks_Prod_VirtualNetwork_externalid": {
            "defaultValue": "/subscriptions/2b7c117e-2dba-4c4a-9cd0-e1f0dfe74b03/resourceGroups/Prod-Network/providers/Microsoft.Network/virtualNetworks/Prod-VirtualNetwork",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2023-09-01-preview",
            "name": "[parameters('actionGroups_Email_Alicia_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "[parameters('actionGroups_Email_Alicia_name')]",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "Email0_-EmailAction-",
                        "emailAddress": "AMarkoe@bphc.org",
                        "useCommonAlertSchema": true
                    }
                ],
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventHubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "apiVersion": "2024-03-01",
            "name": "[parameters('localNetworkGateways_DevTest_LocalNetworkGateway_name')]",
            "location": "eastus",
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.68.0.0/16",
                        "10.75.0.0/16"
                    ]
                },
                "gatewayIpAddress": "140.241.253.162"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2024-06-01",
            "name": "[parameters('privateDnsZones_privatelink_blob_core_windows_net_name')]",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2024-06-01",
            "name": "[parameters('privateDnsZones_privatelink_datafactory_azure_net_name')]",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2024-06-01",
            "name": "[parameters('privateDnsZones_privatelink_dfs_core_windows_net_name')]",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-03-01",
            "name": "[parameters('publicIPAddresses_DevTest_GatewayIP_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "4.246.194.241",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2024-03-01",
            "name": "[parameters('routeTables_DevTest_RouteTable_name')]",
            "location": "eastus",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "AllowAzureTraffic",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_DevTest_RouteTable_name'), 'AllowAzureTraffic')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "Internet"
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('storageAccounts_devtestnetwork93cd_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "defaultToOAuthAuthentication": true,
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_1_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": " DMI-DataLake-SP-Conn",
                "statuses": [
                    {
                        "status": "Error",
                        "target": "token",
                        "error": {}
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2025-01-16T15:17:59.0159123Z",
                "changedTime": "2025-01-16T15:17:59.0159123Z",
                "api": {
                    "name": "azureblob",
                    "displayName": "Azure Blob Storage",
                    "description": "Microsoft Azure Storage provides a massively scalable, durable, and highly available storage for data on the cloud, and serves as the data storage solution for modern applications. Connect to Blob Storage to perform various operations such as create, update, get and delete on blobs in your Azure Storage account.",
                    "iconUri": "https://conn-afd-prod-endpoint-bmc9bqahasf3grgk.b01.azurefd.net/releases/v1.0.1718/1.0.1718.3954/azureblob/icon.png",
                    "brandColor": "#804998",
                    "id": "/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/providers/Microsoft.Web/locations/eastus/managedApis/azureblob",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/resourceGroups/DevTest-Network/providers/Microsoft.Web/connections/', parameters('connections_azureblob_1_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_2_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "sp_to_adls2_blob_conn_v2",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2025-01-21T16:19:05.4312617Z",
                "changedTime": "2025-02-11T20:36:26.9405376Z",
                "api": {
                    "name": "azureblob",
                    "displayName": "Azure Blob Storage",
                    "description": "Microsoft Azure Storage provides a massively scalable, durable, and highly available storage for data on the cloud, and serves as the data storage solution for modern applications. Connect to Blob Storage to perform various operations such as create, update, get and delete on blobs in your Azure Storage account.",
                    "iconUri": "https://conn-afd-prod-endpoint-bmc9bqahasf3grgk.b01.azurefd.net/releases/v1.0.1718/1.0.1718.3954/azureblob/icon.png",
                    "brandColor": "#804998",
                    "id": "/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/providers/Microsoft.Web/locations/eastus/managedApis/azureblob",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/resourceGroups/DevTest-Network/providers/Microsoft.Web/connections/', parameters('connections_azureblob_2_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_3_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "sp_to_adls2_blob_conn_v3",
                "statuses": [
                    {
                        "status": "Error",
                        "target": "token",
                        "error": {}
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2025-01-21T17:27:23.5612256Z",
                "changedTime": "2025-01-21T17:27:23.5612256Z",
                "api": {
                    "name": "azureblob",
                    "displayName": "Azure Blob Storage",
                    "description": "Microsoft Azure Storage provides a massively scalable, durable, and highly available storage for data on the cloud, and serves as the data storage solution for modern applications. Connect to Blob Storage to perform various operations such as create, update, get and delete on blobs in your Azure Storage account.",
                    "iconUri": "https://conn-afd-prod-endpoint-bmc9bqahasf3grgk.b01.azurefd.net/releases/v1.0.1718/1.0.1718.3954/azureblob/icon.png",
                    "brandColor": "#804998",
                    "id": "/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/providers/Microsoft.Web/locations/eastus/managedApis/azureblob",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/resourceGroups/DevTest-Network/providers/Microsoft.Web/connections/', parameters('connections_azureblob_3_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_4_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "sp_to_adls2_blob_conn_v4",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2025-01-21T17:44:55.538087Z",
                "changedTime": "2025-02-23T20:22:26.9091778Z",
                "api": {
                    "name": "azureblob",
                    "displayName": "Azure Blob Storage",
                    "description": "Microsoft Azure Storage provides a massively scalable, durable, and highly available storage for data on the cloud, and serves as the data storage solution for modern applications. Connect to Blob Storage to perform various operations such as create, update, get and delete on blobs in your Azure Storage account.",
                    "iconUri": "https://conn-afd-prod-endpoint-bmc9bqahasf3grgk.b01.azurefd.net/releases/v1.0.1718/1.0.1718.3954/azureblob/icon.png",
                    "brandColor": "#804998",
                    "id": "/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/providers/Microsoft.Web/locations/eastus/managedApis/azureblob",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/resourceGroups/DevTest-Network/providers/Microsoft.Web/connections/', parameters('connections_azureblob_4_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_5_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "BlobConnectionForSharePointData_v3",
                "statuses": [
                    {
                        "status": "Error",
                        "target": "token",
                        "error": {}
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2025-01-21T18:12:50.5945745Z",
                "changedTime": "2025-01-21T18:12:50.5945745Z",
                "api": {
                    "name": "azureblob",
                    "displayName": "Azure Blob Storage",
                    "description": "Microsoft Azure Storage provides a massively scalable, durable, and highly available storage for data on the cloud, and serves as the data storage solution for modern applications. Connect to Blob Storage to perform various operations such as create, update, get and delete on blobs in your Azure Storage account.",
                    "iconUri": "https://conn-afd-prod-endpoint-bmc9bqahasf3grgk.b01.azurefd.net/releases/v1.0.1718/1.0.1718.3954/azureblob/icon.png",
                    "brandColor": "#804998",
                    "id": "/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/providers/Microsoft.Web/locations/eastus/managedApis/azureblob",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/694b4cac-9702-4274-97ff-3c3e1844a8dd/resourceGroups/DevTest-Network/providers/Microsoft.Web/connections/', parameters('connections_azureblob_5_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2024-04-01",
            "name": "[parameters('serverfarms_ASP_DevTestNetwork_b27f_name')]",
            "location": "East US",
            "sku": {
                "name": "FC1",
                "tier": "FlexConsumption",
                "size": "FC1",
                "family": "FC",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "microsoft.insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "[parameters('metricAlerts_EmailOnADFActionFailure_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Email_Alicia_name'))]"
            ],
            "tags": {
                "TeamResource": "DMI_ADF"
            },
            "properties": {
                "severity": 1,
                "enabled": true,
                "scopes": [
                    "[parameters('factories_data_modernization_externalid')]"
                ],
                "evaluationFrequency": "PT1H",
                "windowSize": "PT1H",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "ActivityFailedRuns",
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Count",
                            "skipMetricValidation": false,
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.DataFactory/factories",
                "targetResourceRegion": "eastus",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Email_Alicia_name'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {
            "type": "microsoft.insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "[parameters('metricAlerts_EmailOnADFPipelineFailure_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Email_Alicia_name'))]"
            ],
            "tags": {
                "TeamResource": "DMI_ADF"
            },
            "properties": {
                "severity": 1,
                "enabled": true,
                "scopes": [
                    "[parameters('factories_data_modernization_externalid')]"
                ],
                "evaluationFrequency": "PT1H",
                "windowSize": "PT1H",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.DataFactory/factories",
                            "metricName": "PipelineFailedRuns",
                            "operator": "GreaterThanOrEqual",
                            "timeAggregation": "Count",
                            "skipMetricValidation": false,
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.DataFactory/factories",
                "targetResourceRegion": "eastus",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Email_Alicia_name'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-03-01",
            "name": "[parameters('networkInterfaces_test_vm2_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'default')]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "Ipv4config",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_test_vm2_name')), '/ipConfigurations/Ipv4config')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.59.40.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_blob_core_windows_net_name'), '/devdatabphc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_blob_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.59.40.7"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_blob_core_windows_net_name'), '/dev-gprpt185-v1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_blob_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.59.40.7"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_datafactory_azure_net_name'), '/dmi-projects-factory.eastus')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_datafactory_azure_net_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint dmi-projects-factory-private-endpoint with resource guid 7337ffa8-1f2f-420c-8156-80a8a0068893"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.59.40.11"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'), '/dmiprojectsstorage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.59.40.12"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_blob_core_windows_net_name'), '/vpngw000000')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_blob_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.59.40.132"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_blob_core_windows_net_name'), '/vpngw000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_blob_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.59.40.133"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_blob_core_windows_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_blob_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_datafactory_azure_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_datafactory_azure_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2024-03-01",
            "name": "[parameters('privateEndpoints_dmi_projects_factory_private_endpoint_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'default')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_dmi_projects_factory_private_endpoint_name')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_dmi_projects_factory_private_endpoint_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_dmi_projects_factory_private_endpoint_name')))]",
                        "properties": {
                            "privateLinkServiceId": "[parameters('factories_dmi_projects_factory_externalid')]",
                            "groupIds": [
                                "dataFactory"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'default')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2024-03-01",
            "name": "[parameters('privateEndpoints_dmiprojectsstorage_private_endpoint_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'default')]"
            ],
            "tags": {
                "Factory": "dmi-projects-factory"
            },
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_dmiprojectsstorage_private_endpoint_name'), '_08bf6a5e-2dd5-4317-88b1-58df2a79d039')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_dmiprojectsstorage_private_endpoint_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_dmiprojectsstorage_private_endpoint_name'), '_08bf6a5e-2dd5-4317-88b1-58df2a79d039'))]",
                        "properties": {
                            "privateLinkServiceId": "[parameters('storageAccounts_dmiprojectsstorage_externalid')]",
                            "groupIds": [
                                "dfs"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Disconnected",
                                "description": "storage account being deleted",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'default')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('routeTables_DevTest_RouteTable_name'), '/AllowAzureTraffic')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_DevTest_RouteTable_name'))]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "Internet"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualNetworks_DevTest_Network_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_DevTest_RouteTable_name'))]"
            ],
            "tags": {
                "Factory": "dmi-projects-factory"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.59.40.0/24"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "privateEndpointVNetPolicies": "Disabled",
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'GatewaySubnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.59.40.128/27"
                            ],
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'default')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.59.40.0/25"
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_DevTest_RouteTable_name'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "eastus",
                                        "westus",
                                        "westus3"
                                    ]
                                },
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "Prod-devtest-peering",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_DevTest_Network_name'), 'Prod-devtest-peering')]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[parameters('virtualNetworks_Prod_VirtualNetwork_externalid')]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.59.30.0/24"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.59.30.0/24"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_DevTest_Network_name'), '/GatewaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_DevTest_Network_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.59.40.128/27"
                ],
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_DevTest_Network_name'), '/Prod-devtest-peering')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_DevTest_Network_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[parameters('virtualNetworks_Prod_VirtualNetwork_externalid')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.59.30.0/24"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.59.30.0/24"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('storageAccounts_devdatabphc_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'default')]"
            ],
            "tags": {
                "ms-resource-usage": "azure-cloud-shell"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": true,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "routingPreference": {
                    "routingChoice": "MicrosoftRouting",
                    "publishMicrosoftEndpoints": false,
                    "publishInternetEndpoints": false
                },
                "isSftpEnabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "largeFileSharesState": "Enabled",
                "isHnsEnabled": true,
                "networkAcls": {
                    "resourceAccessRules": [
                        {
                            "tenantId": "ff5b5bc8-925b-471f-942a-eb176c03ab36",
                            "resourceId": "[parameters('factories_data_modernization_externalid')]"
                        }
                    ],
                    "bypass": "Logging, Metrics, AzureServices",
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'default')]",
                            "action": "Allow",
                            "state": "Succeeded"
                        }
                    ],
                    "ipRules": [
                        {
                            "value": "104.174.117.148",
                            "action": "Allow"
                        },
                        {
                            "value": "140.241.253.162",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.48.136/30",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.48.192/29",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.56.144/28",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.56.192/26",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.64.136/30",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.64.144/29",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.72.136/30",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.72.144/29",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.77.232/30",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.152.76/30",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.152.88/29",
                            "action": "Allow"
                        },
                        {
                            "value": "20.141.16.148/30",
                            "action": "Allow"
                        },
                        {
                            "value": "52.127.49.128/29",
                            "action": "Allow"
                        },
                        {
                            "value": "52.127.49.192/26",
                            "action": "Allow"
                        },
                        {
                            "value": "52.127.55.216/29",
                            "action": "Allow"
                        },
                        {
                            "value": "52.235.251.108/30",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.48.116/30",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.56.116/30",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.64.116/30",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.72.116/30",
                            "action": "Allow"
                        },
                        {
                            "value": "20.140.152.72/30",
                            "action": "Allow"
                        },
                        {
                            "value": "52.127.48.68/30",
                            "action": "Allow"
                        }
                    ],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devdatabphc_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devdatabphc_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devtestnetwork93cd_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devtestnetwork93cd_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devdatabphc_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devdatabphc_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devtestnetwork93cd_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devtestnetwork93cd_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devdatabphc_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devdatabphc_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devtestnetwork93cd_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devtestnetwork93cd_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devdatabphc_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devdatabphc_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devtestnetwork93cd_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devtestnetwork93cd_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_SharePointDataExtractionFunction_name'), '/ftp')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_SharePointDataExtractionFunction_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_SharePointDataExtractionFunction_name'), '/scm')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_SharePointDataExtractionFunction_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_SharePointDataExtractionFunction_name'), '/web')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_SharePointDataExtractionFunction_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$SharePointDataExtractionFunction",
                "scmType": "None",
                "use32BitWorkerProcess": false,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "cors": {
                    "allowedOrigins": [
                        "https://portal.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "functionAppScaleLimit": 100,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2024-04-01",
            "name": "[concat(parameters('sites_SharePointDataExtractionFunction_name'), '/', parameters('sites_SharePointDataExtractionFunction_name'), '.azurewebsites.net')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_SharePointDataExtractionFunction_name'))]"
            ],
            "properties": {
                "siteName": "SharePointDataExtractionFunction",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2024-03-01",
            "name": "[parameters('connections_PA_DevTest_VPN_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_DevTest_VirtualNetworkGateway1_name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localNetworkGateways_DevTest_LocalNetworkGateway_name'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_DevTest_VirtualNetworkGateway1_name'))]",
                    "properties": {}
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localNetworkGateways_DevTest_LocalNetworkGateway_name'))]",
                    "properties": {}
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "enableBgp": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "expressRouteGatewayBypass": false,
                "enablePrivateLinkFastPath": false,
                "dpdTimeoutSeconds": 45,
                "connectionMode": "Default",
                "gatewayCustomBgpIpAddresses": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_datafactory_azure_net_name'), '/b2ncwt4cv53qk')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_datafactory_azure_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_DevTest_Network_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "resolutionPolicy": "Default",
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_DevTest_Network_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_blob_core_windows_net_name'), '/o4fztdlrog5ou')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_blob_core_windows_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_DevTest_Network_name'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "resolutionPolicy": "Default",
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_DevTest_Network_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'), '/o4fztdlrog5ou')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_DevTest_Network_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "resolutionPolicy": "Default",
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_DevTest_Network_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('privateEndpoints_dmi_projects_factory_private_endpoint_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_dmi_projects_factory_private_endpoint_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_datafactory_azure_net_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink.datafactory.azure.net",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_datafactory_azure_net_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualNetworkGateways_DevTest_VirtualNetworkGateway1_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_DevTest_GatewayIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'GatewaySubnet')]"
            ],
            "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": [
                    {
                        "name": "default",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_DevTest_VirtualNetworkGateway1_name')), '/ipConfigurations/default')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_DevTest_GatewayIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_DevTest_Network_name'), 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": false,
                "bgpSettings": {
                    "asn": 65515,
                    "bgpPeeringAddress": "10.59.40.158",
                    "peerWeight": 0,
                    "bgpPeeringAddresses": [
                        {
                            "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_DevTest_VirtualNetworkGateway1_name')), '/ipConfigurations/default')]",
                            "customBgpIpAddresses": []
                        }
                    ]
                },
                "vpnGatewayGeneration": "Generation1",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_DevTest_Network_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_DevTest_Network_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_DevTest_RouteTable_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.59.40.0/25"
                ],
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_DevTest_RouteTable_name'))]"
                },
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Storage",
                        "locations": [
                            "eastus",
                            "westus",
                            "westus3"
                        ]
                    },
                    {
                        "service": "Microsoft.KeyVault",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devtestnetwork93cd_name'), '/default/app-package-sharepointdataextractionfunction-534bc44')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_devtestnetwork93cd_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devtestnetwork93cd_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devtestnetwork93cd_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_devtestnetwork93cd_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devtestnetwork93cd_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devtestnetwork93cd_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_devtestnetwork93cd_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devtestnetwork93cd_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devdatabphc_name'), '/default/cib-referral-system')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_devdatabphc_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devdatabphc_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devdatabphc_name'), '/default/redcap-idb-hsb')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_devdatabphc_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devdatabphc_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devdatabphc_name'), '/default/sbhc-system')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_devdatabphc_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devdatabphc_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_devtestnetwork93cd_name'), '/default/AzureFunctionsDiagnosticEvents202501')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccounts_devtestnetwork93cd_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_devtestnetwork93cd_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2024-04-01",
            "name": "[parameters('sites_SharePointDataExtractionFunction_name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_DevTestNetwork_b27f_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_devtestnetwork93cd_name'))]"
            ],
            "kind": "functionapp,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "sharepointdataextractionfunction.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "sharepointdataextractionfunction.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_DevTestNetwork_b27f_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "dnsConfiguration": {},
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 100,
                    "minimumElasticInstanceCount": 0
                },
                "functionAppConfig": {
                    "deployment": {
                        "storage": {
                            "type": "blobcontainer",
                            "value": "[concat('https://', parameters('storageAccounts_devtestnetwork93cd_name'), '.blob.core.windows.net/app-package-sharepointdataextractionfunction-534bc44')]",
                            "authentication": {
                                "type": "storageaccountconnectionstring",
                                "storageAccountConnectionStringName": "DEPLOYMENT_STORAGE_CONNECTION_STRING"
                            }
                        }
                    },
                    "runtime": {
                        "name": "python",
                        "version": "3.11"
                    },
                    "scaleAndConcurrency": {
                        "maximumInstanceCount": 100,
                        "instanceMemoryMB": 2048
                    }
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "ipMode": "IPv4",
                "vnetBackupRestoreEnabled": false,
                "customDomainVerificationId": "75849B57EA929F8D35F9BE8C564388DD1E600F2B539580D345549A87ECD357B0",
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "endToEndEncryptionEnabled": false,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        }
    ]
}