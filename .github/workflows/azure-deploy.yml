name: Azure Deployment

# Trigger the workflow on push, pull request, and manual events for dev, uat, and main branches.
on:
  push:
    branches:
      - dev
      - uat
      - main
      - test-commit-9cb7a9c
  pull_request:
    branches:
      - dev
      - uat
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository code.
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Azure CLI with the specified version.
      - name: Set up Azure CLI
        uses: azure/CLI@v1
        with:
          azcliversion: '2.40.0'
          inlineScript: 'echo "Azure CLI is set up"'

      # Step 3: Set environment variables based on the branch.
      #   - main branch: Production deployment -> RESOURCE_GROUP = CIB-DL-PROD, PARAM_FILE = parameters/prod.parameters.json
      #   - uat or dev branch: UAT deployment -> RESOURCE_GROUP = CIB-DL-UAT, PARAM_FILE = parameters/uat.parameters.json
      - name: Set environment variables
        id: setenv
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "Production deployment"
            echo "PARAM_FILE=parameters/prod.parameters.json" >> $GITHUB_ENV
            echo "RESOURCE_GROUP=CIB-DL-PROD" >> $GITHUB_ENV
            echo "AZURE_CREDS=$(echo '${{ secrets.AZURE_CREDENTIALS_PROD }}' | tr -d '\n')" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/uat" ] || [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            echo "UAT deployment"
            echo "PARAM_FILE=parameters/uat.parameters.json" >> $GITHUB_ENV
            echo "RESOURCE_GROUP=CIB-DL-UAT" >> $GITHUB_ENV
            echo "AZURE_CREDS=$(echo '${{ secrets.AZURE_CREDENTIALS_DEV }}' | tr -d '\n')" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/test-commit-9cb7a9c" ]; then
            echo "Test commit deployment"
            echo "UAT deployment"
            echo "PARAM_FILE=parameters/uat.parameters.json" >> $GITHUB_ENV
            echo "RESOURCE_GROUP=CIB-DL-UAT" >> $GITHUB_ENV
            echo "AZURE_CREDS=$(echo '${{ secrets.AZURE_CREDENTIALS_DEV }}' | tr -d '\n')" >> $GITHUB_ENV
          fi

      # Debug: Verify that AZURE_CREDS is set.
      - name: Debug AZURE_CREDS
        run: |
          if [ -z "$AZURE_CREDS" ]; then
            echo "AZURE_CREDS is empty"
          else
            echo "AZURE_CREDS is set"
          fi

      # Step 4: Log in to Azure using the credentials.
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDS }}

      # Step 5: Build the Bicep template to validate its syntax.
      - name: Build Bicep Template
        run: az bicep build --file templates/ARMTemplateForFactory.bicep

      # Step 6: Create the resource group if it does not already exist.
      - name: Create Resource Group (if needed)
        run: az group create --name ${{ env.RESOURCE_GROUP }} --location "East US"

      # Step 7: Deploy the Bicep template using the specified parameter file and SP key.
      - name: Deploy Bicep Template
        run: |
          az deployment group create --mode Complete --resource-group ${{ env.RESOURCE_GROUP }} --template-file templates/ARMTemplateForFactory.bicep --parameters @${{ env.PARAM_FILE }} --parameters SharePointOnlineList_Jan28_servicePrincipalKey="${{ secrets.SP_KEY }}"
